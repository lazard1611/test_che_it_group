.header {
	position: fixed;
	top: 0;
	left: 0;
	padding: 1rem var(--gl-indent);
	background-color: $white;

	height: var(--height-header);
	width: 100%;

	filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));
	will-change: transform;

	@include z-index(header);
}

.header__in {
	max-width: $page_width;
	width: 100%;
	margin: 0 auto;
}

.header__logo_wrap {
	flex: auto;
}

.header__logo {
	display: block;
	width: 12.6rem;
	height: 4.2rem;
}

.header__logo_img {
	@include contain_img;
}

.header__nav {
	&:not(:last-child) {
		margin-right: 2.1rem;
	}

	@include bp($point_3) {
		display: none;
	}
}

.header__row,
.header__nav_list,
.header__lang_list,
.header__social_list {
	@include flex_block(row, wrap, flex-start, center, center);
}

.header__social_list {
	@include bp($point_3) {
		justify-content: center;

		&:not(.header_sidebar &) {
			display: none;
		}
	}
}

.header__nav_list_item {
}

.header__nav_list_link {
	display: block;

	@include h4;
	@include header_hover;

	color: $gray_2;
	transition: color 0.3s ease;

	&:focus,
	&:hover {
		color: $dark_blue;
	}
}

.header__lang_list {
	&:not(:last-child) {
		margin-right: 3rem;
	}
}

.header__lang_item {
}

.header__lang_btn {
	display: block;
	padding: 0.4rem 0.5rem;
	cursor: pointer;

	&:not(.header__lang_btn--active_state) {
		border: 2px solid rgba(229, 229, 229, 0.6);
		background-color: $gray_3;
	}

	&.header__lang_btn--active_state {
		border: 2px solid transparent;
		box-shadow: 0 0.1rem 0.4rem rgba(0, 0, 0, 0.15);
	}

	.header__lang_item:first-child & {
		border-radius: 0.4rem 0 0 0.4rem;
	}

	.header__lang_item:last-child & {
		border-radius: 0 0.4rem 0.4rem 0;
	}
}

.header__lang_img {
	@include cover_img;
}

.header__social_item {
	&:not(:last-child) {
		margin-right: 2rem;
	}
}

.header__social_link {
	color: $gray_2;
	transition: color 0.3s ease;

	&:focus,
	&:hover {
		color: $dark_blue;
	}
}

//---------------------------------------------trigger
.header__menu_trigger {
	$burgerHeight: 2rem;

	position: relative;
	z-index: 5;

	width: 3rem;
	height: $burgerHeight;

	cursor: pointer;

	&::before,
	&::after,
	span {
		position: absolute;
		left: 0;
		top: 50%;

		width: 100%;
		height: 1px;

		transition: transform 0.3s ease;
		will-change: transform;

		background-color: $black;
	}

	&::before {
		content: '';
		transform: translateY(calc($burgerHeight / 2 * -1));
	}

	&::after {
		content: '';
		transform: translateY(calc($burgerHeight / 2));
	}

	.body--open_menu_state & {
		span {
			transform: scale(0);
		}

		&::before {
			transform: rotate(-45deg);
		}

		&::after {
			transform: rotate(45deg);
		}
	}

	@include bp($point_2, min) {
		display: none;
	}

	@include bp($point_3) {
		display: block;
	}
}

//---------------------------------------------trigger###
